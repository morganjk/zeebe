/*
 * Copyright Â© 2017 camunda services GmbH (info@camunda.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package io.zeebe.gateway.api.commands;

import io.zeebe.util.sched.future.ActorFuture;

public interface FinalCommandStep<T> {

  /**
   * Sends the command to the Zeebe broker. This operation is asynchronous. In case of success, the
   * future returns the event that was generated by the Zeebe broker in response to the command.
   *
   * <p>Call {@link ActorFuture#join()} to wait until the response is available.
   *
   * <pre>
   * Future&#60;JobEvent&#62 future = command.send();
   * JobEvent event = future.join();
   * </pre>
   *
   * @return a future tracking state of success/failure of the command.
   */
  ActorFuture<T> send();
}
